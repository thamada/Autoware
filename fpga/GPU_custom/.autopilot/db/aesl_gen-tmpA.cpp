// AUTOGENERATED by Xilinx OpenCL - do not modify

#line 1 "gpu_compute_unit"
#include "/opt/Xilinx/Vivado_HLS/2016.4/common/technology/autopilot/opencl/libspir_types.h"

#include "/opt/Xilinx/Vivado_HLS/2016.4/common/technology/autopilot/etc/autopilot_ssdm_op.h"
#include "/opt/Xilinx/Vivado_HLS/2016.4/common/technology/autopilot/ap_cint.h"
#define XCL_SIZE_T __spir_size_t

/* KernelID: A, Kernel Name: gpu */

class aesl_keep_name_class;
typedef struct {
  unsigned int x;
  unsigned int y;
  unsigned int z;
  friend class ::aesl_keep_name_class;
} three_tuple_t;

typedef struct {
  XCL_SIZE_T x;
  XCL_SIZE_T y;
  XCL_SIZE_T z;
  friend class ::aesl_keep_name_class;
} gpu_args_t;

class aesl_keep_name_class {
public:
  inline __attribute__((always_inline)) static void
  aesl_keep_name_0_group_id(three_tuple_t* group_id) {
    _ssdm_op_SpecExt("member_name", "group_id.x", &group_id->x);
    _ssdm_op_SpecExt("member_name", "group_id.y", &group_id->y);
    _ssdm_op_SpecExt("member_name", "group_id.z", &group_id->z);
  }
  inline __attribute__((always_inline)) static void
  aesl_keep_name_0_global_offset(three_tuple_t* global_offset) {
    _ssdm_op_SpecExt("member_name", "global_offset.x", &global_offset->x);
    _ssdm_op_SpecExt("member_name", "global_offset.y", &global_offset->y);
    _ssdm_op_SpecExt("member_name", "global_offset.z", &global_offset->z);
  }
  inline __attribute__((always_inline)) static void
  aesl_keep_name_0_args(gpu_args_t* args) {
    _ssdm_op_SpecExt("member_name", "x", &args->x);
    _ssdm_op_SpecExt("member_name", "y", &args->y);
    _ssdm_op_SpecExt("member_name", "z", &args->z);
  }
};

extern "C" {

extern void __SPIR_kernelA(...);
void __AESL_call_work_itemA(...);

void
__AESL_call_work_item_NA(volatile __attribute__((address_space(16776960))) unsigned int* gmem, __spir_rt_info_t *rt_info, gpu_args_t *args)
{
  volatile __attribute__((address_space(16776960))) unsigned int *arg_x = (gmem + ((XCL_SIZE_T)args->x >> 2));
  volatile __attribute__((address_space(16776960))) unsigned int *arg_y = (gmem + ((XCL_SIZE_T)args->y >> 2));
  volatile __attribute__((address_space(16776960))) unsigned int *arg_z = (gmem + ((XCL_SIZE_T)args->z >> 2));
  __SPIR_kernelA(rt_info, arg_x, arg_y, arg_z);
  return;
}

void
__AESL_work_groupA(__attribute__((address_space(16776960))) volatile unsigned int* gmem, three_tuple_t *group_id, three_tuple_t *global_offset, gpu_args_t *args)
{
#define RT_INFO_REQD_LOCAL_SIZE_X 16
#define RT_INFO_REQD_LOCAL_SIZE_Y 1
#define RT_INFO_REQD_LOCAL_SIZE_Z 1
#define RT_INFO_NEED_GROUP_ID
#define RT_INFO_NEED_GLOBAL_OFFSET
::aesl_keep_name_class::aesl_keep_name_0_group_id(group_id);
::aesl_keep_name_class::aesl_keep_name_0_global_offset(global_offset);
::aesl_keep_name_class::aesl_keep_name_0_args(args);
_ssdm_op_SpecInterface(gmem, "m_axi", 0, 0, "",128, 0, "", "", "", 16, 16, 16, 16, "", "");
_ssdm_op_SpecInterface(group_id, "s_axilite", 0, 0, "", 0, 0, "control", "", "", 0, 0, 0, 0, "", "");
_ssdm_op_SpecInterface(global_offset, "s_axilite", 0, 0, "", 0, 0, "control", "", "", 0, 0, 0, 0, "", "");
_ssdm_op_SpecInterface(0, "s_axilite", 0, 0, "", 0, 0, "control", "", "", 0, 0, 0, 0, "", "");
_ssdm_op_SpecInterface(args, "s_axilite", 0, 0, "", 0, 0, "control", "", "", 0, 0, 0, 0, "", "");
#define CALL_WORK_ITEM_FUNC __AESL_call_work_itemA
#include "aesl_gen_cu_body.inc"
CALL_WORK_ITEM_FUNC(gmem, &rt_info, args);
#undef  CALL_WORK_ITEM_FUNC
return;
#undef RT_INFO_NEED_GROUP_ID
#undef RT_INFO_NEED_GLOBAL_OFFSET
#undef RT_INFO_REQD_LOCAL_SIZE_X
#undef RT_INFO_REQD_LOCAL_SIZE_Y
#undef RT_INFO_REQD_LOCAL_SIZE_Z
}

} // extern C
